<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="8bc445c8-f39a-4b45-8a7a-8175bffcc74f" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/src/clj/arduino/scheduler.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.nrepl-port" beforeDir="false" afterPath="$PROJECT_DIR$/.nrepl-port" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/project.clj" beforeDir="false" afterPath="$PROJECT_DIR$/project.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clj/arduino/mqtt.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/clj/arduino/mqtt.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clj/arduino/web.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/clj/arduino/web.clj" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FUSProjectUsageTrigger">
    <session id="1806648900">
      <usages-collector id="statistics.lifecycle.project">
        <counts>
          <entry key="project.closed" value="7" />
          <entry key="project.open.time.0" value="1" />
          <entry key="project.open.time.1" value="5" />
          <entry key="project.open.time.14" value="1" />
          <entry key="project.open.time.2" value="2" />
          <entry key="project.opened" value="10" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.open">
        <counts>
          <entry key="clj" value="23" />
          <entry key="cljs" value="49" />
          <entry key="html" value="4" />
          <entry key="md" value="3" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.open">
        <counts>
          <entry key="Clojure" value="23" />
          <entry key="ClojureScript" value="49" />
          <entry key="HTML" value="4" />
          <entry key="PLAIN_TEXT" value="3" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.edit">
        <counts>
          <entry key="clj" value="7859" />
          <entry key="cljs" value="4644" />
          <entry key="dummy" value="10" />
          <entry key="html" value="78" />
          <entry key="md" value="520" />
          <entry key="txt" value="260" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.edit">
        <counts>
          <entry key="Clojure" value="7859" />
          <entry key="ClojureScript" value="4644" />
          <entry key="HTML" value="78" />
          <entry key="PLAIN_TEXT" value="790" />
        </counts>
      </usages-collector>
    </session>
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="600">
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/clj/arduino/influx.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="1305">
              <caret line="45" column="20" selection-start-line="45" selection-start-column="20" selection-end-line="45" selection-end-column="20" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/clj/arduino/scheduler.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="1131">
              <caret line="63" column="44" lean-forward="true" selection-start-line="63" selection-start-column="44" selection-end-line="63" selection-end-column="44" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/clj/arduino/mqtt.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="406">
              <caret line="14" column="98" lean-forward="true" selection-start-line="14" selection-start-column="98" selection-end-line="14" selection-end-column="98" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/README.md">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="232">
              <caret line="8" lean-forward="true" selection-start-line="8" selection-end-line="8" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/project.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="-116">
              <caret line="32" column="71" selection-start-line="32" selection-start-column="71" selection-end-line="32" selection-end-column="71" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/clj/arduino/web.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="1769">
              <caret line="67" lean-forward="true" selection-start-line="67" selection-end-line="67" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="ClojureScript Namespace" />
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>uti</find>
      <find>menu</find>
      <find>jyu-styles-light</find>
      <find>line-plo</find>
      <find>swap!</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/src/clj/arduino/core.clj" />
        <option value="$PROJECT_DIR$/src/clj/arduino/arduino/web.clj" />
        <option value="$PROJECT_DIR$/src/cljs/arduino/events.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/arduino/mui.cljs" />
        <option value="$PROJECT_DIR$/README.md" />
        <option value="$PROJECT_DIR$/resources/public/index.html" />
        <option value="$PROJECT_DIR$/src/cljs/arduino/core.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/arduino/routes.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/arduino/subs.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/arduino/handlers.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/arduino/db.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/arduino/views.cljs" />
        <option value="$PROJECT_DIR$/src/clj/arduino/influx.clj" />
        <option value="$PROJECT_DIR$/project.clj" />
        <option value="$PROJECT_DIR$/src/clj/arduino/scheduler.clj" />
        <option value="$PROJECT_DIR$/src/clj/arduino/web.clj" />
        <option value="$PROJECT_DIR$/src/clj/arduino/mqtt.clj" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="y" value="39" />
    <option name="width" value="3200" />
    <option name="height" value="1761" />
  </component>
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="arduino" type="b2602c69:ProjectViewProjectNode" />
              <item name="arduino" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="arduino" type="b2602c69:ProjectViewProjectNode" />
              <item name="arduino" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="arduino" type="b2602c69:ProjectViewProjectNode" />
              <item name="arduino" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="clj" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="arduino" type="b2602c69:ProjectViewProjectNode" />
              <item name="arduino" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="clj" type="462c0819:PsiDirectoryNode" />
              <item name="arduino" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="PackagesPane" />
      <pane id="Scope" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="com.android.tools.idea.instantapp.provision.ProvisionBeforeRunTaskProvider.myTimeStamp" value="1543429268690" />
    <property name="cursive.last.file.extension./home/hoertlehner/Documents/arduino/src/clj" value="clj" />
    <property name="cursive.last.file.extension./home/hoertlehner/Documents/arduino/src/cljs" value="cljs" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/clj/arduino" />
    </key>
  </component>
  <component name="ReplState" timestamp="1543429268687">{:repl-history {:ide [], :local [{:command &quot;(ns arduino.core\n  (:require my.ns\n           [samsara-mqtt.mqtt-server :as mqtt]\n           [com.stuartsierra.component :as component]\n           [reloaded.repl :refer\n            [set-init! system init start stop go reset]])\n  )&quot;, :offset 230, :ns &quot;user&quot;} {:command &quot;(ns arduino.core\n  (:require [samsara-mqtt.mqtt-server :as mqtt]\n           [com.stuartsierra.component :as component]\n           [reloaded.repl :refer\n            [set-init! system init start stop go reset]])\n  )&quot;, :offset 213, :ns &quot;user&quot;} {:command &quot;(ns arduino.core\n  (:gen-class)\n  (:require [clojurewerkz.machine-head.client :as mh]\n            ;[com.stuartsierra.component :as component]\n            [reloaded.repl :refer\n            ;         [set-init! system init start stop go reset]\n            ]))&quot;, :offset 257, :ns &quot;user&quot;} {:command &quot;(ns arduino.core\n  (:require [clojurewerkz.machine-head.client :as mh]\n            ;[com.stuartsierra.component :as component]\n            [reloaded.repl :refer\n            ;         [set-init! system init start stop go reset]\n            ]))&quot;, :offset 242, :ns &quot;user&quot;} {:command &quot;(ns arduino.core\n  (:require [clojurewerkz.machine-head.client :as mh]\n            ;[com.stuartsierra.component :as component]\n            ))&quot;, :offset 141, :ns &quot;user&quot;} {:command &quot;(defn demo [&amp; args]\n  (let [conn (mh/connect \&quot;tcp://debian.hoertlehner.com:1883\&quot;)]\n    (mh/subscribe conn {\&quot;hello\&quot; 0} (fn [^String topic _ ^bytes payload]\n                                     (println (String. payload \&quot;UTF-8\&quot;))\n                                     (mh/disconnect conn)\n                                     (System/exit 0)))\n    (mh/publish conn \&quot;hello\&quot; \&quot;Hello, world\&quot;)))&quot;, :offset 387, :ns &quot;arduino.core&quot;} {:command &quot;(defn demo []\n  (let [conn (mh/connect \&quot;tcp://debian.hoertlehner.com:1883\&quot;)]\n    (mh/subscribe conn {\&quot;hello\&quot; 0} (fn [^String topic _ ^bytes payload]\n                                     (println (String. payload \&quot;UTF-8\&quot;))\n                                     (mh/disconnect conn)\n                                     (System/exit 0)))\n    (mh/publish conn \&quot;hello\&quot; \&quot;Hello, world\&quot;)))&quot;, :offset 381, :ns &quot;arduino.core&quot;} {:command &quot;(demo)&quot;, :offset 6, :ns &quot;arduino.core&quot;} {:command &quot;(defn subscribe []\n  (let [conn (mh/connect \&quot;tcp://debian.hoertlehner.com:1883\&quot;)]\n    (mh/subscribe conn {\&quot;hello\&quot; 0} (fn [^String topic _ ^bytes payload]\n                                     (println (String. payload \&quot;UTF-8\&quot;))\n                                     (mh/disconnect conn)\n                                     (System/exit 0)))\n    ))&quot;, :offset 346, :ns &quot;arduino.core&quot;} {:command &quot;(defn publish []\n  (let [conn (mh/connect \&quot;tcp://debian.hoertlehner.com:1883\&quot;)]\n    (mh/publish conn \&quot;hello\&quot; \&quot;Hello, world\&quot;)))&quot;, :offset 126, :ns &quot;arduino.core&quot;} {:command &quot;(publish)&quot;, :offset 9, :ns &quot;arduino.core&quot;} {:command &quot;(defn publish [topic payload]\n  (let [conn (mh/connect \&quot;tcp://debian.hoertlehner.com:1883\&quot;)]\n    (mh/publish conn topic payload)))&quot;, :offset 130, :ns &quot;arduino.core&quot;} {:command &quot;(publish \&quot;hello\&quot; \&quot;123\&quot;)&quot;, :offset 23, :ns &quot;arduino.core&quot;} {:command &quot;(subscribe)&quot;, :offset 11, :ns &quot;arduino.core&quot;} {:command &quot;(publish \&quot;hello\&quot; \&quot;1243\&quot;)&quot;, :offset 24, :ns &quot;arduino.core&quot;} {:command &quot;(defn subscribe [topic]\n  (let [conn (mh/connect \&quot;tcp://debian.hoertlehner.com:1883\&quot;)]\n    (mh/subscribe conn {topic 0} (fn [^String topic _ ^bytes payload]\n                                     (println (String. payload \&quot;UTF-8\&quot;))\n                                     (mh/disconnect conn)\n                                     (System/exit 0)))\n    ))&quot;, :offset 349, :ns &quot;arduino.core&quot;} {:command &quot;(defn subscribe [topic]\n  (let [conn (mh/connect \&quot;tcp://debian.hoertlehner.com:1883\&quot;)]\n    (mh/subscribe conn {topic 0} (fn [^String topic _ ^bytes payload]\n                                     (println (String. payload \&quot;UTF-8\&quot;))\n                                     (mh/disconnect conn)\n                                     (System/exit 0)))))&quot;, :offset 344, :ns &quot;arduino.core&quot;} {:command &quot;(defn publish [topic payload]\n  (let [conn (mh/connect \&quot;tcp://debian.hoertlehner.com:1883\&quot;)]\n    (mh/publish conn topic payload)\n    (println \&quot;published topic:\&quot; topic \&quot; payload:\&quot; payload)))&quot;, :offset 189, :ns &quot;arduino.core&quot;} {:command &quot;(publish \&quot;tb1\&quot; \&quot;1243\&quot;)&quot;, :offset 22, :ns &quot;arduino.core&quot;} {:command &quot;(defn subscribe [topic]\n  (let [conn (mh/connect \&quot;tcp://debian.hoertlehner.com:1883\&quot;)]\n    (mh/subscribe conn {topic 0} (fn [^String topic _ ^bytes payload]\n                                     (println \&quot;RCVD: \&quot; (String. payload \&quot;UTF-8\&quot;))\n                                   ; (mh/disconnect conn)\n                                   ;(System/exit 0)\n                                   ))))&quot;, :offset 388, :ns &quot;arduino.core&quot;} {:command &quot;(ns arduino.mqtt\n  (:require [clojurewerkz.machine-head.client :as mh]\n   ))&quot;, :offset 76, :ns &quot;user&quot;} {:command &quot;(defn publish [topic payload]\n  (let [conn (mh/connect \&quot;tcp://debian.hoertlehner.com:1883\&quot;)]\n    (mh/publish conn topic payload)\n    (println \&quot;published topic:\&quot; topic \&quot; payload:\&quot; payload)\n    (mh/disconnect conn)))&quot;, :offset 214, :ns &quot;arduino.mqtt&quot;} {:command &quot;(defn subscribe [topic]\n  (let [conn (mh/connect \&quot;tcp://debian.hoertlehner.com:1883\&quot;)]\n    (mh/subscribe conn {topic 0} (fn [^String topic _ ^bytes payload]\n                                   (println \&quot;RCVD: \&quot; (String. payload \&quot;UTF-8\&quot;))\n                                   ; (mh/disconnect conn)\n                                   ;(System/exit 0)\n                                   ))))&quot;, :offset 386, :ns &quot;arduino.mqtt&quot;} {:command &quot;(defn topics (atom {:test1 {:valu 13 :date nil :desc \&quot;Tiberius Test 1\&quot;}\n                    :ph    {:valu 7 :date nil :desc \&quot;PH of Water\&quot;}\n                    :test2 {:valu 123 :date nil :desc \&quot;Tiberius Test 2\&quot;}\n                    }))&quot;, :offset 235, :ns &quot;arduino.mqtt&quot;} {:command &quot;(atom {:a 3})&quot;, :offset 13, :ns &quot;arduino.mqtt&quot;} {:command &quot;(atom {:a 3 :b {:name \&quot;asdf\&quot;}})&quot;, :offset 31, :ns &quot;arduino.mqtt&quot;} {:command &quot;(defn topics (atom {:test1 {:valu 13  :desc \&quot;Tiberius Test 1\&quot;}\n                    :ph    {:valu 7   :desc \&quot;PH of Water\&quot;}\n                    :test2 {:valu 123 :desc \&quot;Tiberius Test 2\&quot;}\n                    }))&quot;, :offset 208, :ns &quot;arduino.mqtt&quot;} {:command &quot;(def topics (atom {:test1 {:valu 13  :desc \&quot;Tiberius Test 1\&quot;}\n                    :ph    {:valu 7   :desc \&quot;PH of Water\&quot;}\n                    :test2 {:valu 123 :desc \&quot;Tiberius Test 2\&quot;}\n                    }))&quot;, :offset 207, :ns &quot;arduino.mqtt&quot;} {:command &quot;(defn get-topics []\n  (@topics)\n  )&quot;, :offset 35, :ns &quot;arduino.mqtt&quot;} {:command &quot;(defn get-topics []\n  @topics\n  )&quot;, :offset 33, :ns &quot;arduino.mqtt&quot;} {:command &quot;(ns arduino.web\n  (:require\n\n    [schema.core :as s]\n\n    [ring.util.response :as response]\n    [ring.util.http-response :refer :all]\n    [ring.middleware.defaults :refer [wrap-defaults site-defaults]]\n    [ring.middleware.reload :refer [wrap-reload]]\n\n    [compojure.core :refer :all] ; [compojure.core :refer [defroutes routes]]\n    [compojure.route :as route]\n    [compojure.api.sweet :as sweet]\n    [cheshire.core :refer :all]\n\n    [arduino.mqtt :as mqtt]\n   ))&quot;, :offset 465, :ns &quot;user&quot;} {:command &quot;(ns arduino.web\n  (:require\n    [schema.core :as s]\n\n    [ring.util.response :as response]\n    [ring.util.http-response :refer :all]\n    [ring.middleware.defaults :refer [wrap-defaults site-defaults]]\n    [ring.middleware.reload :refer [wrap-reload]]\n\n    [compojure.core :refer :all] ; [compojure.core :refer [defroutes routes]]\n    [compojure.route :as route]\n    [compojure.api.sweet :as sweet]\n    [cheshire.core :refer :all]\n\n    [arduino.mqtt :as mqtt]\n   ))&quot;, :offset 464, :ns &quot;user&quot;} {:command &quot;(println \&quot;setting up routes..\&quot;)&quot;, :offset 31, :ns &quot;arduino.web&quot;} {:command &quot;(defn set-topic [topic payload]\n  (swap! topics assoc topic payload)\n  )&quot;, :offset 72, :ns &quot;arduino.mqtt&quot;} {:command &quot;(subscribe \&quot;tb1\&quot;)&quot;, :offset 17, :ns &quot;arduino.mqtt&quot;} {:command &quot;(publish \&quot;tb1\&quot; \&quot;12434\&quot;)&quot;, :offset 23, :ns &quot;arduino.mqtt&quot;} {:command &quot;(defn x {:test1 {:valu 1}})&quot;, :offset 27, :ns &quot;arduino.mqtt&quot;} {:command &quot;(def x {:test1 {:valu 1}})&quot;, :offset 26, :ns &quot;arduino.mqtt&quot;} {:command &quot;(assoc-in x [:test1 :valu] 15)&quot;, :offset 30, :ns &quot;arduino.mqtt&quot;} {:command &quot;(println x)&quot;, :offset 11, :ns &quot;arduino.mqtt&quot;} {:command &quot;(defn set-topic [topic payload]\n  (swap! topics assoc-in [topic :valu] payload)\n  )&quot;, :offset 83, :ns &quot;arduino.mqtt&quot;} {:command &quot;(defn set-topic\n  \&quot;updates the :valu\&quot;\n  [topic payload]\n  (swap! topics assoc-in [topic :valu :time (t/now) ] payload)\n  )&quot;, :offset 122, :ns &quot;arduino.mqtt&quot;} {:command &quot;(ns arduino.mqtt\n  (:require [clj-time.core :as t] \n            [clojurewerkz.machine-head.client :as mh]\n   ))&quot;, :offset 111, :ns &quot;user&quot;} {:command &quot;(defn set-topic\n  \&quot;updates the :valu\&quot;\n  [topic payload]\n  (swap! topics assoc-in [topic :valu ] payload)\n  (swap! topics assoc-in [topic :time ] (t/now))\n  )&quot;, :offset 157, :ns &quot;arduino.mqtt&quot;} {:command &quot;(set-topic :ph 9)&quot;, :offset 17, :ns &quot;arduino.mqtt&quot;} {:command &quot;(set-topic :ph 10)&quot;, :offset 18, :ns &quot;arduino.mqtt&quot;} {:command &quot;(defn do-action\n  \&quot;tell sensor to do certain action\&quot;\n  [topic payload]\n  (publish topic payload)\n  (set-topic topic payload))&quot;, :offset 125, :ns &quot;arduino.mqtt&quot;} {:command &quot;(defroutes app-routes\n           ; (route/resources \&quot;/\&quot; {:root \&quot;public\&quot;})\n           ;; NOTE: this will deliver your index.html\n           ; (GET \&quot;/\&quot; [] (-&gt; (response/resource-response \&quot;index.html\&quot; {:root \&quot;public\&quot;})\n           ;                (response/content-type \&quot;text/html\&quot;)))\n         ; (GET \&quot;/\&quot; [] (myviews/home-page (instruments/get-instruments)))\n\n           (sweet/api\n             (sweet/context \&quot;/api\&quot; []\n                            :tags [\&quot;api\&quot;]\n\n                            (sweet/GET \&quot;/topics\&quot; []\n                                       :query-params []\n                                       (ring.util.http-response/ok (mqtt/topics)))\n\n                            (sweet/GET \&quot;/action\&quot; []\n                                       :query-params [topic :- s/Str ,  {action :- s/Int nil}]\n                                       (ring.util.http-response/ok (mqtt/do-action topic action)))\n\n                            ))\n\n           (route/not-found \&quot;&lt;h1&gt; Sorry! Page not found.&lt;/h1&gt;\&quot;))&quot;, :offset 995, :ns &quot;arduino.web&quot;} {:command &quot;(get-topics)&quot;, :offset 12, :ns &quot;arduino.mqtt&quot;} {:command &quot;(ns arduino.influx\n  (:require [clj-time.core :as t]\n            [capacitor.core :as influx]\n                             ))&quot;, :offset 124, :ns &quot;user&quot;} {:command &quot;(def client ( influx/make-client {\n                                  {:host     \&quot;metrics.hoertlehner.com\&quot;\n                                   :scheme   \&quot;http\&quot;\n                                   :port     8086\n                                   ; :username \&quot;root\&quot;\n                                   ; :password \&quot;root\&quot;\n                                   :db       \&quot;demo\&quot;\n                                   :version  \&quot;0.9\&quot;}}\n                                 ))&quot;, :offset 456, :ns &quot;arduino.influx&quot;} {:command &quot;(def client ( influx/make-client {\n                                  :host     \&quot;metrics.hoertlehner.com\&quot;\n                                   :scheme   \&quot;http\&quot;\n                                   :port     8086\n                                   ; :username \&quot;root\&quot;\n                                   ; :password \&quot;root\&quot;\n                                   :db       \&quot;demo\&quot;\n                                   :version  \&quot;0.9\&quot;}\n                                 ))&quot;, :offset 454, :ns &quot;arduino.influx&quot;} {:command &quot;(ping client)&quot;, :offset 13, :ns &quot;arduino.influx&quot;} {:command &quot;(influx/ping client)&quot;, :offset 20, :ns &quot;arduino.influx&quot;} {:command &quot;(influx/list-dbs client)&quot;, :offset 24, :ns &quot;arduino.influx&quot;} {:command &quot;(influx/db-query client \&quot;SELECT * FROM light1\&quot; true)&quot;, :offset 52, :ns &quot;arduino.influx&quot;} {:command &quot;(influx/db-query c \&quot;SHOW SERIES\&quot; true)&quot;, :offset 38, :ns &quot;arduino.influx&quot;} {:command &quot;(influx/db-query client \&quot;SELECT * FROM 'mqtt_consumer,host=Metrics,topic=light1'\&quot; true)&quot;, :offset 87, :ns &quot;arduino.influx&quot;} {:command &quot;(influx/db-query client \&quot;SELECT light1 FROM mqtt_consumer\&quot; true)&quot;, :offset 64, :ns &quot;arduino.influx&quot;} {:command &quot;(influx/db-query client \&quot;SELECT \n \n * FROM AFFeed,host=Metrics,metric_type=counter\&quot; true)&quot;, :offset 89, :ns &quot;arduino.influx&quot;} {:command &quot;(influx/db-query client \&quot;SELECT \n \n * FROM AFFeed,host=Metrics,metric_type=counter\&quot; false)&quot;, :offset 90, :ns &quot;arduino.influx&quot;} {:command &quot;(influx/db-query client \&quot;SELECT * FROM AFFeed,host=Metrics\&quot; false)&quot;, :offset 66, :ns &quot;arduino.influx&quot;} {:command &quot;(influx/db-query client \&quot;SELECT * FROM AFFeed\&quot; false)&quot;, :offset 53, :ns &quot;arduino.influx&quot;} {:command &quot;(influx/db-query client \&quot;SELECT * FROM diskio\&quot; false)&quot;, :offset 53, :ns &quot;arduino.influx&quot;} {:command &quot;(influx/db-query client \&quot;SHOW SERIES\&quot; true)&quot;, :offset 43, :ns &quot;arduino.influx&quot;} {:command &quot;(influx/db-query client \&quot;SELECT * FROM cpu\&quot; true)&quot;, :offset 49, :ns &quot;arduino.influx&quot;} {:command &quot;(db-query c \&quot;SELECT MAX(value) FROM cpu GROUP BY cpu, host\&quot; true)&quot;, :offset 65, :ns &quot;arduino.influx&quot;} {:command &quot;(influx/db-query client \&quot;SELECT MAX(value) FROM cpu GROUP BY cpu, host\&quot; true)&quot;, :offset 77, :ns &quot;arduino.influx&quot;} {:command &quot;(influx/db-query client \&quot;SELECT MAX(value) FROM cpu\&quot; true)&quot;, :offset 58, :ns &quot;arduino.influx&quot;} {:command &quot;(influx/db-query client \&quot;SELECT MAX(value) FROM mqtt_consumer\&quot; true)&quot;, :offset 68, :ns &quot;arduino.influx&quot;} {:command &quot;(influx/db-query client \&quot;SELECT * FROM mqtt_consumer\&quot; true)&quot;, :offset 59, :ns &quot;arduino.influx&quot;} {:command &quot;(influx/db-query client \&quot;SELECT * FROM mqtt_consumer WHERE time &gt; now() - 24h\&quot; true)&quot;, :offset 84, :ns &quot;arduino.influx&quot;} {:command &quot;(influx/db-query client \&quot;SELECT light1 FROM mqtt_consumer WHERE time &gt; now() - 24h\&quot; true)&quot;, :offset 89, :ns &quot;arduino.influx&quot;} {:command &quot;(influx/db-query client \&quot;SELECT * FROM mqtt_consumer WHERE (time &gt; now() - 24h) AND (\\\&quot;topic\\\&quot; = 'light2') \&quot; true)&quot;, :offset 114, :ns &quot;arduino.influx&quot;} {:command &quot;(defn sensor-history [name]\n  (-&gt; client\n      (influx/db-query \&quot;SELECT * FROM mqtt_consumer WHERE (time &gt; now() - 24h) AND (\\\&quot;topic\\\&quot; = 'light2') \&quot; true) \n      (:values)\n      #(map #(get % 3) % )\n     )\n  )&quot;, :offset 209, :ns &quot;arduino.influx&quot;} {:command &quot;(defn sensor-history [name]\n  \n  (let [data  (influx/db-query \&quot;SELECT * FROM mqtt_consumer WHERE (time &gt; now() - 24h) AND (\\\&quot;topic\\\&quot; = 'light2') \&quot; true)\n        vals (:values data)\n        series (map #(get % 3) vals)]  \n      \n      series\n     )\n  )&quot;, :offset 251, :ns &quot;arduino.influx&quot;} {:command &quot;(defn sensor-history [name]\n  \n  (let [data  (influx/db-query \&quot;SELECT * FROM mqtt_consumer WHERE (time &gt; now() - 24h) AND (\\\&quot;topic\\\&quot; = 'light2') \&quot; true)\n        ;vals (:values data)\n        ;series (map #(get % 3) vals)\n        ]  \n      \n      data\n     )\n  )&quot;, :offset 260, :ns &quot;arduino.influx&quot;} {:command &quot;(defn sensor-history [name]\n  (let [data  (influx/db-query \&quot;SELECT * FROM mqtt_consumer WHERE (time &gt; now() - 24h) AND (\\\&quot;topic\\\&quot; = 'light2') \&quot; true)\n        ;vals (:values data)\n        ;series (map #(get % 3) vals)\n        ]  \n      \n      data\n     )\n  )&quot;, :offset 257, :ns &quot;arduino.influx&quot;} {:command &quot;(defn sensor-history [name]\n  (let [data  (influx/db-query client \&quot;SELECT * FROM mqtt_consumer WHERE (time &gt; now() - 24h) AND (\\\&quot;topic\\\&quot; = 'light2') \&quot; true)\n        ;vals (:values data)\n        ;series (map #(get % 3) vals)\n        ]  \n      \n      data\n     )\n  )&quot;, :offset 264, :ns &quot;arduino.influx&quot;} {:command &quot;(defn sensor-history [name]\n  (let [data  (influx/db-query client \&quot;SELECT * FROM mqtt_consumer WHERE (time &gt; now() - 24h) AND (\\\&quot;topic\\\&quot; = 'light2') \&quot; true)\n        vals (:values data)\n        series (map #(get % 3) vals)\n        ]  \n      \n      series\n     )\n  )&quot;, :offset 264, :ns &quot;arduino.influx&quot;} {:command &quot;(defn sensor-history [name]\n  (let [data  (influx/db-query client \&quot;SELECT * FROM mqtt_consumer WHERE (time &gt; now() - 24h) AND (\\\&quot;topic\\\&quot; = 'light2') \&quot; true)\n        vals (:values data)\n        ;series (map #(get % 3) vals)\n        ]  \n      \n      vals\n     )\n  )&quot;, :offset 263, :ns &quot;arduino.influx&quot;} {:command &quot;(defn sensor-history [name]\n  (let [data  (influx/db-query client \&quot;SELECT * FROM mqtt_consumer WHERE (time &gt; now() - 24h) AND (\\\&quot;topic\\\&quot; = 'light2') \&quot; true)\n        vals (map :values data)\n        ;series (map #(get % 3) vals)\n        ]  \n      \n      vals\n     )\n  )&quot;, :offset 267, :ns &quot;arduino.influx&quot;} {:command &quot;(defn sensor-history [name]\n  (let [data  (influx/db-query client \&quot;SELECT * FROM mqtt_consumer WHERE (time &gt; now() - 24h) AND (\\\&quot;topic\\\&quot; = 'light2') \&quot; true)\n        vals (map :values data)\n        ;series (map #(get % 3) vals)\n        ]  \n      \n      data\n     )\n  )&quot;, :offset 267, :ns &quot;arduino.influx&quot;} {:command &quot;(defn sensor-history [name]\n  (let [data  (influx/db-query client \&quot;SELECT * FROM mqtt_consumer WHERE (time &gt; now() - 24h) AND (\\\&quot;topic\\\&quot; = 'light2') \&quot; true)\n        results (:results data)\n        series (get results 0)\n        vals (map :values data)\n        ;series (map #(get % 3) vals)\n        ]  \n      \n      series\n     )\n  )&quot;, :offset 332, :ns &quot;arduino.influx&quot;} {:command &quot;(defn sensor-history [name]\n  (let [data  (influx/db-query client \&quot;SELECT * FROM mqtt_consumer WHERE (time &gt; now() - 24h) AND (\\\&quot;topic\\\&quot; = 'light2') \&quot; true)\n        results (:results data)\n        series (:series (get results 0))\n        vals (map :values data)\n        ;series (map #(get % 3) vals)\n        ]  \n      \n      series\n     )\n  )&quot;, :offset 342, :ns &quot;arduino.influx&quot;} {:command &quot;(defn sensor-history [name]\n  (let [data  (influx/db-query client \&quot;SELECT * FROM mqtt_consumer WHERE (time &gt; now() - 24h) AND (\\\&quot;topic\\\&quot; = 'light2') \&quot; true)\n        results (:results data)\n        series (:series (get results 0))\n        vals ( :values series)\n        ;series (map #(get % 3) vals)\n        ]  \n      \n      vals\n     )\n  )&quot;, :offset 339, :ns &quot;arduino.influx&quot;} {:command &quot;(defn sensor-history [name]\n  (let [data  (influx/db-query client \&quot;SELECT * FROM mqtt_consumer WHERE (time &gt; now() - 24h) AND (\\\&quot;topic\\\&quot; = 'light2') \&quot; true)\n        results (:results data)\n        series (:series (get results 0))\n        ;vals ( :values series)\n        ;series (map #(get % 3) vals)\n        ]  \n      \n      series\n     )\n  )&quot;, :offset 342, :ns &quot;arduino.influx&quot;} {:command &quot;(defn sensor-history [name]\n  (let [data  (influx/db-query client \&quot;SELECT * FROM mqtt_consumer WHERE (time &gt; now() - 24h) AND (\\\&quot;topic\\\&quot; = 'light2') \&quot; true)\n        results (:results data)\n        series (get (:series (get results 0)) 0)\n        ;vals ( :values series)\n        ;series (map #(get % 3) vals)\n        ]  \n      \n      series\n     )\n  )&quot;, :offset 350, :ns &quot;arduino.influx&quot;} {:command &quot;(defn sensor-history [name]\n  (let [data  (influx/db-query client \&quot;SELECT * FROM mqtt_consumer WHERE (time &gt; now() - 24h) AND (\\\&quot;topic\\\&quot; = 'light2') \&quot; true)\n        results (:results data)\n        series (get (:series (get results 0)) 0)\n        vals ( :values series)\n        ;series (map #(get % 3) vals)\n        ]  \n      \n      vals\n     )\n  )&quot;, :offset 347, :ns &quot;arduino.influx&quot;} {:command &quot;(defn sensor-history [name]\n  (let [data  (influx/db-query client \&quot;SELECT * FROM mqtt_consumer WHERE (time &gt; now() - 24h) AND (\\\&quot;topic\\\&quot; = 'light2') \&quot; true)\n        results (:results data)\n        series (get (:series (get results 0)) 0)\n        vals ( :values series)\n        ts (map #(get % 3) vals)\n        ]  \n      \n      ts\n     )\n  )&quot;, :offset 340, :ns &quot;arduino.influx&quot;} {:command &quot;(defn sensor-history [name]\n  (let [data  (influx/db-query client (str \&quot;SELECT * FROM mqtt_consumer WHERE (time &gt; now() - 24h) AND (\\\&quot;topic\\\&quot; = '\&quot; name \&quot;') \&quot;) true)\n        results (:results data)\n        series (get (:series (get results 0)) 0)\n        vals ( :values series)\n        ts (map #(get % 3) vals)\n        ]  \n      \n      ts\n     )\n  )&quot;, :offset 348, :ns &quot;arduino.influx&quot;} {:command &quot;(sensor-history \&quot;light1\&quot;)&quot;, :offset 25, :ns &quot;arduino.influx&quot;} {:command &quot;(sensor-history \&quot;light2\&quot;)&quot;, :offset 25, :ns &quot;arduino.influx&quot;} {:command &quot;(ns arduino.scheduler\n  (:require [chime :refer  [chime-at]]\n            [clj-time.core :as t]))&quot;, :offset 96, :ns &quot;user&quot;} {:command &quot;(chime-at [(-&gt; 2 t/seconds t/from-now)\n             (-&gt; 4 t/seconds t/from-now)]\n            (fn [time]\n              (println \&quot;Chiming at\&quot; time)))&quot;, :offset 147, :ns &quot;arduino.scheduler&quot;} {:command &quot;(ns arduino.scheduler\n  (:require [chime :refer  [chime-at]]\n            [clj-time.core :as t]\n            [clj-time.periodic :refer [periodic-seq]]\n            ))&quot;, :offset 163, :ns &quot;user&quot;} {:command &quot;(defn on-off []\n    (let [on (atom {true})]\n      (if @on \&quot;on\&quot; \&quot;off\&quot;)\n    ))&quot;, :offset 76, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn on-off []\n    (let [on (atom true)]\n      (if @on \&quot;on\&quot; \&quot;off\&quot;)\n    ))&quot;, :offset 74, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn on-off []\n    (let [on (atom true)]\n      (swap! on !@on)\n      (if @on  \&quot;on\&quot; \&quot;off\&quot;)\n    ))&quot;, :offset 97, :ns &quot;arduino.scheduler&quot;} {:command &quot;@on&quot;, :offset 3, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn on-off []\n    (let [on (atom true)]\n      (swap! on (not @on) )\n      (if @on  \&quot;on\&quot; \&quot;off\&quot;)\n    ))&quot;, :offset 103, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn on-off []\n    (let [on (atom true)]\n      (swap! on not )\n      (if @on  \&quot;on\&quot; \&quot;off\&quot;)\n    ))&quot;, :offset 97, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn on-off []\n    (let [on (atom true)]\n      (swap! on not )\n      (println \&quot;on is:\&quot; @on)\n      (if @on  \&quot;on\&quot; \&quot;off\&quot;)\n    ))&quot;, :offset 126, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defonce x 12)&quot;, :offset 14, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defonce on (atom true))&quot;, :offset 24, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn on-off []\n      (swap! on not )\n      (println \&quot;on is:\&quot; @on)\n      (if @on  \&quot;on\&quot; \&quot;off\&quot;)\n    )&quot;, :offset 99, :ns &quot;arduino.scheduler&quot;} {:command &quot;(on-off)&quot;, :offset 8, :ns &quot;arduino.scheduler&quot;} {:command &quot;(-&gt;&gt; (periodic-seq (.. (t/now)\n                         (withZone (DateTimeZone/forID \&quot;America/New_York\&quot;))\n                         (withTime 20 0 0 0))\n                     (-&gt; 1 t/days)))&quot;, :offset 189, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn start-timer [name run-every-minutes run-for-minutes]\n  (let [on (atom true)]\n    (chime-at\n      (-&gt;&gt; (periodic-seq (.. (t/now)\n                             (withZone (DateTimeZone/forID \&quot;America/New_York\&quot;))\n                             (withTime 20 0 0 0))\n                         (-&gt; run-every-minutes t/seconds)))\n      (fn [time]\n        (println \&quot;Timer at\&quot; time))   \n    )))&quot;, :offset 386, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn start-timer [name run-every-minutes run-for-minutes]\n  (let [on (atom true)]\n    (chime-at\n      (-&gt;&gt; (periodic-seq (.. (t/now)\n                             (withZone (DateTimeZone/forID \&quot;America/New_York\&quot;))\n                             (withTime 5 0 0 0))\n                         (-&gt; run-every-minutes t/seconds)))\n      (fn [time]\n        (println \&quot;Timer at\&quot; time))\n    )))&quot;, :offset 382, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn start-timer [name run-every-minutes run-for-minutes]\n  (let [on (atom true)]\n    (chime-at\n      (-&gt;&gt; (periodic-seq (.. (t/now)\n                             (withZone (DateTimeZone/forID \&quot;America/New_York\&quot;))\n                             (withTime 5 0 0 0)\n                             (-&gt; -1 t/days)\n                             )\n                         (-&gt; run-every-minutes t/seconds)))\n      (fn [time]\n        (println \&quot;Timer at\&quot; time))\n    )))&quot;, :offset 456, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn start-timer [name run-every-minutes run-for-minutes]\n  (let [on (atom true)]\n    (chime-at\n      (-&gt;&gt; (periodic-seq ( .plusDays (.. (t/now)\n                                         (withZone (DateTimeZone/forID \&quot;America/New_York\&quot;))\n                                         (withTime 5 0 0 0)\n                                         (-&gt; -1 t/days)\n                                         ) -1) \n                         (-&gt; run-every-minutes t/seconds)))\n      (fn [time]\n        (println \&quot;Timer at\&quot; time))\n    )))&quot;, :offset 521, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn start-timer [name run-every-minutes run-for-minutes]\n  (let [on (atom true)]\n    (chime-at\n      (-&gt;&gt; (periodic-seq (.. (.plusDays (t/now) 1 ) \n                                (withZone (DateTimeZone/forID \&quot;America/New_York\&quot;))\n                                (withTime 5 0 0 0)) \n                         (-&gt; run-every-minutes t/seconds)))\n      (fn [time]\n        (println \&quot;Timer at\&quot; time))\n    )))&quot;, :offset 405, :ns &quot;arduino.scheduler&quot;} {:command &quot;(.. (.plusDays (t/now) 1 )\n    (withZone (DateTimeZone/forID \&quot;America/New_York\&quot;))\n    (withTime 5 0 0 0))&quot;, :offset 105, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn start-timer [name run-every-minutes run-for-minutes]\n  (let [on (atom true)]\n    (chime-at\n      (-&gt;&gt; (periodic-seq (.. (.plusDays (t/now) -1 ) \n                                (withZone (DateTimeZone/forID \&quot;America/New_York\&quot;))\n                                (withTime 5 0 0 0)) \n                         (-&gt; run-every-minutes t/seconds)))\n      (fn [time]\n        (println \&quot;Timer at\&quot; time))\n    )))&quot;, :offset 406, :ns &quot;arduino.scheduler&quot;} {:command &quot;(start-timer \&quot;bongo\&quot; 10 1)&quot;, :offset 26, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn start-timer [name run-every-minutes run-for-minutes]\n  \&quot;returns a zero argument function that can be called to cancel the timer\&quot;\n  (let [on (atom true)]\n    (chime-at\n      (-&gt;&gt; (periodic-seq (.. (.plusDays (t/now) -1 )\n                                (withZone (DateTimeZone/forID \&quot;America/New_York\&quot;))\n                                (withTime 5 0 0 0))\n                         (-&gt; run-every-minutes t/seconds)))\n      (fn [time]\n        (println \&quot;Timer at\&quot; time))\n    )))&quot;, :offset 480, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn start-timer [name run-every-minutes run-for-minutes]\n  \&quot;returns a zero argument function that can be called to cancel the timer\&quot;\n  (let [on (atom true)]\n    (chime-at\n      (-&gt;&gt; (periodic-seq (.. (.plusDays (t/now) -1 )\n                                (withZone (DateTimeZone/forID \&quot;America/New_York\&quot;))\n                                (withTime 5 0 0 0))\n                         (-&gt; run-every-minutes t/seconds)))\n      (fn [time]\n        (println time \&quot; setting to\&quot; @on ))\n    )))&quot;, :offset 488, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn on-off-interval [run-every-minutes run-for-minutes]\n  (swap! on not )\n  (if @on  run-every-minutes run-for-minutes)\n  )&quot;, :offset 125, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn start-timer [name run-every-minutes run-for-minutes]\n  \&quot;returns a zero argument function that can be called to cancel the timer\&quot;\n  (let [on (atom true)]\n    (chime-at\n      (-&gt;&gt; (periodic-seq (.. (.plusDays (t/now) -1 )\n                                (withZone (DateTimeZone/forID \&quot;America/New_York\&quot;))\n                                (withTime 5 0 0 0))\n                         (-&gt; (on-off-interval on run-every-minutes run-for-minutes) t/seconds)))\n      (fn [time]\n        (println time \&quot; setting to\&quot; @on ))\n    )))&quot;, :offset 525, :ns &quot;arduino.scheduler&quot;} {:command &quot;(ns arduino.scheduler\n  (:require [chime :refer  [chime-at]]\n            [clj-time.core :as t]\n            [clj-time.periodic :refer [periodic-seq]]\n            )\n  (:import [org.joda.time DateTimeZone])\n  )&quot;, :offset 207, :ns &quot;user&quot;} {:command &quot;(defn on-off-interval [on run-every-minutes run-for-minutes]\n  (swap! on not )\n  (if @on  run-every-minutes run-for-minutes)\n  )&quot;, :offset 128, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn on-off-interval [on run-every-minutes run-for-minutes]\n  (println \&quot;on-off-interval\&quot;)\n  (swap! on not )\n  (if @on  run-every-minutes run-for-minutes)\n  )&quot;, :offset 158, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn start-timer [name run-every-minutes run-for-minutes]\n  \&quot;returns a zero argument function that can be called to cancel the timer\&quot;\n  (let [on (atom true)]\n    (chime-at\n      (-&gt;&gt; (periodic-seq (.. (.plusDays (t/now) -1 )\n                                (withZone (DateTimeZone/forID \&quot;America/New_York\&quot;))\n                                (withTime 5 0 0 0))\n                         (-&gt; (on-off-interval on run-every-minutes run-for-minutes) t/seconds)))\n      (fn [time]\n        (println time \&quot; setting \&quot; name \&quot; to \&quot; @on ))\n    )))&quot;, :offset 535, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn start-timer [name run-every-minutes run-for-minutes]\n  \&quot;returns a zero argument function that can be called to cancel the timer\&quot;\n  (let [on (atom true)]\n    (chime-at\n      (-&gt;&gt; (periodic-seq (.. (.plusDays (t/now) -1 )\n                                (withZone (DateTimeZone/forID \&quot;America/New_York\&quot;))\n                                (withTime 20 0 0 0))\n                         (-&gt; (on-off-interval on run-every-minutes run-for-minutes) t/seconds)))\n      (fn [time]\n        (println time \&quot; setting \&quot; name \&quot; to \&quot; @on ))\n    )))&quot;, :offset 536, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn interval [start]\n  (println \&quot;interval\&quot;)\n  (-&gt; 5 t/seconds))&quot;, :offset 65, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn interval [start]\n  (println \&quot;interval\&quot;)\n  (start 5 t/seconds))&quot;, :offset 68, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn interval [start]\n  (println \&quot;interval\&quot;)\n  (t/seconds  5))&quot;, :offset 63, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn interval [start]\n  (println \&quot;interval\&quot;)\n  (t/seconds start 5))&quot;, :offset 68, :ns &quot;arduino.scheduler&quot;} {:command &quot;(interval (t/now))&quot;, :offset 18, :ns &quot;arduino.scheduler&quot;} {:command &quot;(-&gt;&gt; (periodic-seq (.. (.plusDays (t/now) -1 )\n                       (withZone (DateTimeZone/forID \&quot;America/New_York\&quot;))\n                       (withTime 20 0 0 0))\n                   (-&gt; run-every-minutes t/seconds)))&quot;, :offset 218, :ns &quot;arduino.scheduler&quot;} {:command &quot;(-&gt;&gt; (periodic-seq (.. (.plusDays (t/now) -1 )\n                       (withZone (DateTimeZone/forID \&quot;America/New_York\&quot;))\n                       (withTime 20 0 0 0))\n                   (-&gt; 5 t/seconds)))&quot;, :offset 202, :ns &quot;arduino.scheduler&quot;} {:command &quot;(take 5 (-&gt;&gt; (periodic-seq (.. (.plusDays (t/now) -1 )\n                               (withZone (DateTimeZone/forID \&quot;America/New_York\&quot;))\n                               (withTime 20 0 0 0))\n                           (-&gt; 5 t/seconds))))&quot;, :offset 235, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn run-every [minutes]\n  (-&gt;&gt; (periodic-seq (.. (.plusDays (t/now) -1 )\n                         (withZone (DateTimeZone/forID \&quot;America/New_York\&quot;))\n                         (withTime 20 0 0 0))\n                     (-&gt; minutes t/seconds))\n  ))&quot;, :offset 246, :ns &quot;arduino.scheduler&quot;} {:command &quot;(take 5 (run-every 5) )&quot;, :offset 23, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn run-for [time-seq minutes]\n  (map (t/plus % (t/seconds minutes)) time-seq)\n  )&quot;, :offset 84, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn run-for [time-seq minutes]\n  (map #(t/plus % (t/seconds minutes)) time-seq)\n  )&quot;, :offset 85, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn run-on-off [run-every-minutes run-for-minutes]\n  (let [on-seq (run-every run-every-minutes)\n        off-seq (run-for on-seq run-for-minutes)\n        combined (lazy-cat on-seq off-seq)] )\n    combined\n  )&quot;, :offset 209, :ns &quot;arduino.scheduler&quot;} {:command &quot;(take 10 run-on-off 30 3)&quot;, :offset 25, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn run-on-off [run-every-minutes run-for-minutes]\n  (let [on-seq (run-every run-every-minutes)\n        off-seq (run-for on-seq run-for-minutes)\n        combined (lazy-cat on-seq off-seq)]\n    combined))&quot;, :offset 205, :ns &quot;arduino.scheduler&quot;} {:command &quot;(take 10 (run-on-off 30 3) )&quot;, :offset 28, :ns &quot;arduino.scheduler&quot;} {:command &quot;(take 5 (run-for (run-every 5) 7 ))&quot;, :offset 35, :ns &quot;arduino.scheduler&quot;} {:command &quot;(take 5 (run-for (run-every 60) 7 ))&quot;, :offset 36, :ns &quot;arduino.scheduler&quot;} {:command &quot;(take 5 (run-every 60) )&quot;, :offset 24, :ns &quot;arduino.scheduler&quot;} {:command &quot;(take 10 (run-for (run-every 60) 7 ))&quot;, :offset 37, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn run-on-off [run-every-minutes run-for-minutes]\n  (let [on-seq (run-every run-every-minutes)\n        off-seq (run-for on-seq run-for-minutes)\n        combined (lazy-cat on-seq off-seq)]\n    ;combined\n    off-seq\n    ))&quot;, :offset 223, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn run-on-off [run-every-minutes run-for-minutes]\n  (let [on-seq (run-every run-every-minutes)\n        off-seq (run-for on-seq run-for-minutes)\n        combined (interleave on-seq off-seq)]\n    combined\n    ))&quot;, :offset 212, :ns &quot;arduino.scheduler&quot;} {:command &quot;(take 100 (run-on-off 60 7) )&quot;, :offset 29, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn start-timer [name run-every-minutes run-for-minutes]\n  \&quot;returns a zero argument function that can be called to cancel the timer\&quot;\n  (let [on (atom true)]\n    (chime-at (run-on-off run-every-minutes run-for-minutes)\n      (fn [time]\n        (swap! on not )\n        (println time \&quot; setting \&quot; name \&quot; to \&quot; @on ))\n    )))&quot;, :offset 321, :ns &quot;arduino.scheduler&quot;} {:command &quot;(take 10 (run-on-off 60 7) )&quot;, :offset 28, :ns &quot;arduino.scheduler&quot;} {:command &quot;(def finish (start-timer \&quot;bongo\&quot; 10 1) )&quot;, :offset 40, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn start-cycle [name run-every-minutes run-for-minutes f]\n  \&quot;returns a zero argument function that can be called to cancel the timer\&quot;\n  (let [on-seq (run-every run-every-minutes)\n        off-seq (run-for on-seq run-for-minutes)\n        on-action (chime-at on-seq (fn [time] (f name true)))\n        off-action (chime-at off-seq (fn [time] (f name false)))\n        end (fn [] ( (on-action) (off-action))) \n        ]\n    end))&quot;, :offset 426, :ns &quot;arduino.scheduler&quot;} {:command &quot;(def finish (start-cycle \&quot;bongo\&quot; 10 1) )&quot;, :offset 40, :ns &quot;arduino.scheduler&quot;} {:command &quot;(def finish (start-cycle \&quot;bongo\&quot; 10 1 demo) )&quot;, :offset 45, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn demo [name val]\n    (println time \&quot; setting \&quot; name \&quot; to \&quot; val )\n    )&quot;, :offset 75, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn start-cycle [name run-every-minutes run-for-minutes f]\n  \&quot;returns a zero argument function that can be called to cancel the timer\&quot;\n  (let [on-seq (run-every run-every-minutes)\n        off-seq (run-for on-seq run-for-minutes)\n        on-action (chime-at on-seq (fn [time] (f time name true)))\n        off-action (chime-at off-seq (fn [time] (f time name false)))\n        end (fn [] ( (on-action) (off-action))) \n        ]\n    end))&quot;, :offset 436, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn demo [time name val]\n    (println time \&quot; setting \&quot; name \&quot; to \&quot; val )\n    )&quot;, :offset 80, :ns &quot;arduino.scheduler&quot;} {:command &quot;(def finish (start-cycle \&quot;ph\&quot; 30 7 demo) )&quot;, :offset 42, :ns &quot;arduino.scheduler&quot;} {:command &quot;(finish)&quot;, :offset 8, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn demo [time name val]\n    (println time \&quot; setting \&quot; name \&quot; to \&quot; val ))&quot;, :offset 75, :ns &quot;arduino.scheduler&quot;} {:command &quot;(def finish (start-cycle \&quot;ph\&quot; 10 1 demo) )&quot;, :offset 42, :ns &quot;arduino.scheduler&quot;} {:command &quot;(defn start-timers []\n  (let [topics (get-topics)\n        topics-with-timer (filter #(contains % :timer) topics)\n        ]\n    (println topics-with-timer) \n    ))&quot;, :offset 162, :ns &quot;arduino.mqtt&quot;} {:command &quot;(defn start-timers []\n  (let [topics (get-topics)\n        topics-with-timer (filter #(contains? % :timer) topics)\n        ]\n    (println topics-with-timer)\n    ))&quot;, :offset 162, :ns &quot;arduino.mqtt&quot;} {:command &quot;(defn start-timer [data]\n  (println \&quot;starting timer \&quot; data) )&quot;, :offset 61, :ns &quot;arduino.mqtt&quot;} {:command &quot;(defn start-timers []\n  (run! #(start-timer (name (get % 0))) topics ))&quot;, :offset 71, :ns &quot;arduino.mqtt&quot;} {:command &quot;(defn start-timers []\n  (let [topics (get-topics)]\n    (run! #(start-timer (name (get % 0))) topics )  \n    )\n  )&quot;, :offset 113, :ns &quot;arduino.mqtt&quot;} {:command &quot;(defn start-timers []\n  (let [topics (get-topics)]\n    (run! #(start-timer  (get % 0)) topics )  \n    )\n  )&quot;, :offset 107, :ns &quot;arduino.mqtt&quot;} {:command &quot;(defn start-timers []\n  (let [topics (get-topics)]\n    (run! #(start-timer  (get % 1)) topics )  \n    )\n  )&quot;, :offset 107, :ns &quot;arduino.mqtt&quot;} {:command &quot;(defn start-timer [name timer-data]\n  (println \&quot;starting timer \&quot; name timer-data) )&quot;, :offset 83, :ns &quot;arduino.mqtt&quot;} {:command &quot;(defn start-timers []\n  (let [topics (get-topics)]\n    (run! #(start-timer  (get % 0) (get % 1) ) topics )  \n    )\n  )&quot;, :offset 118, :ns &quot;arduino.mqtt&quot;} {:command &quot;(defn start-timers []\n  (let [topics (get-topics)]\n    (run! #(start-timer  (name (get % 0))  (get % 1) ) topics )  \n    )\n  )&quot;, :offset 126, :ns &quot;arduino.mqtt&quot;} {:command &quot;(defn start-timers []\n  (let [topics (get-topics)]\n    (run! #(start-timer  (name (get % 0))  (:timer (get % 1))  ) topics )  \n    )\n  )&quot;, :offset 136, :ns &quot;arduino.mqtt&quot;} {:command &quot;(defn start-timer [name timer-data]\n  (if-not (nil? timer-data)(println \&quot;starting timer \&quot; name timer-data) ))&quot;, :offset 109, :ns &quot;arduino.mqtt&quot;} {:command &quot;(defn timer-action [name data]\n  (println \&quot;timer-action \&quot; name data)\n  (if data (do-action name \&quot;1\&quot;) (do-action name \&quot;0\&quot;)))&quot;, :offset 123, :ns &quot;arduino.mqtt&quot;} {:command &quot;(defn timer-action [time name data]\n  (println time \&quot;timer-action \&quot; name data)\n  (if data (do-action name \&quot;1\&quot;) (do-action name \&quot;0\&quot;)))&quot;, :offset 133, :ns &quot;arduino.mqtt&quot;} {:command &quot;(ns arduino.mqtt\n  (:require [clj-time.core :as t]\n            [clojurewerkz.machine-head.client :as mh]\n            [arduino.scheduler :as scheduler]\n   ))&quot;, :offset 156, :ns &quot;user&quot;} {:command &quot;(defn start-timer [name timer-data]\n  (if-not (nil? timer-data) (do (println \&quot;starting timer \&quot; name timer-data)\n                                (scheduler/start-cycle name (:on timer-data) (:off timer-data) timer-action)\n                              )))&quot;, :offset 254, :ns &quot;arduino.mqtt&quot;} {:command &quot;(defn start-timers []\n  (let [topics (get-topics)]\n    (run! #(start-timer  (name (get % 0))  (:timer (get % 1))  ) topics)))&quot;, :offset 125, :ns &quot;arduino.mqtt&quot;} {:command &quot;(start-timers)&quot;, :offset 14, :ns &quot;arduino.mqtt&quot;}], :remote []}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager">
    <configuration name="Unnamed" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <module name="arduino" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <module name="" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="0" />
      <module name="" />
      <method v="2" />
    </configuration>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="8bc445c8-f39a-4b45-8a7a-8175bffcc74f" name="Default Changelist" comment="" />
      <created>1540340719582</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1540340719582</updated>
    </task>
    <task id="LOCAL-00001" summary="data being pushed to client">
      <created>1540402836987</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1540402836988</updated>
    </task>
    <task id="LOCAL-00002" summary="data being pushed to client">
      <created>1540402844126</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1540402844126</updated>
    </task>
    <task id="LOCAL-00003" summary="data pushing to react client working">
      <created>1540409063869</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1540409063869</updated>
    </task>
    <task id="LOCAL-00004" summary="ring server - no auto reload">
      <created>1540409335542</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1540409335542</updated>
    </task>
    <task id="LOCAL-00005" summary="material ui added">
      <created>1540488012139</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1540488012139</updated>
    </task>
    <task id="LOCAL-00006" summary="material ui light bulbs on off">
      <created>1540490293850</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1540490293850</updated>
    </task>
    <task id="LOCAL-00007" summary="secretary client side routing added.">
      <created>1540502989320</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1540502989329</updated>
    </task>
    <task id="LOCAL-00008" summary="Tooltips with open/close logging.">
      <created>1540505734993</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1540505734993</updated>
    </task>
    <task id="LOCAL-00009" summary="Vega plots added.">
      <created>1540942250342</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1540942250342</updated>
    </task>
    <option name="localTasksCounter" value="10" />
    <servers />
  </component>
  <component name="ToolWindowManager">
    <frame x="0" y="39" width="3200" height="1761" extended-state="7" />
    <editor active="true" />
    <layout>
      <window_info active="true" content_ui="combo" id="Project" order="0" visible="true" weight="0.14115755" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Image Layers" order="2" />
      <window_info id="Designer" order="3" />
      <window_info id="UI Designer" order="4" />
      <window_info id="Capture Tool" order="5" />
      <window_info id="Favorites" order="6" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" visible="true" weight="0.027173912" />
      <window_info anchor="bottom" id="Run" order="2" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Terminal" order="7" />
      <window_info anchor="bottom" id="Event Log" order="8" side_tool="true" />
      <window_info anchor="bottom" id="Version Control" order="9" weight="0.08930988" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" sideWeight="0.49864316" weight="0.24983923" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Palette" order="3" />
      <window_info anchor="right" id="Capture Analysis" order="4" />
      <window_info anchor="right" id="Theme Preview" order="5" />
      <window_info anchor="right" id="REPL" order="6" sideWeight="0.5006784" side_tool="true" visible="true" weight="0.2466238" />
      <window_info anchor="right" id="Leiningen" order="7" sideWeight="0.49932158" weight="0.32990354" />
      <window_info anchor="right" id="Palette&#9;" order="8" />
      <window_info anchor="right" id="Maven Projects" order="9" />
    </layout>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="data being pushed to client" />
    <MESSAGE value="data pushing to react client working" />
    <MESSAGE value="ring server - no auto reload" />
    <MESSAGE value="material ui added" />
    <MESSAGE value="material ui light bulbs on off" />
    <MESSAGE value="secretary client side routing added." />
    <MESSAGE value="Tooltips with open/close logging." />
    <MESSAGE value="Vega plots added." />
    <option name="LAST_COMMIT_MESSAGE" value="Vega plots added." />
  </component>
  <component name="antWorkspaceConfiguration">
    <option name="IS_AUTOSCROLL_TO_SOURCE" value="false" />
    <option name="FILTER_TARGETS" value="false" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/resources/public/index.html">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="145">
          <caret line="5" column="90" selection-start-line="5" selection-start-column="90" selection-end-line="5" selection-end-column="90" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/cljs/arduino/routes.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="580">
          <caret line="20" selection-start-line="20" selection-end-line="20" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/cljs/arduino/mui.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1368">
          <caret line="143" column="47" selection-start-line="143" selection-start-column="47" selection-end-line="143" selection-end-column="47" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/arduino/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="319">
          <caret line="11" selection-start-line="11" selection-end-line="11" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/cljs/arduino/handlers.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1049">
          <caret line="60" column="28" selection-start-line="60" selection-start-column="28" selection-end-line="60" selection-end-column="28" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/cljs/arduino/subs.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="232">
          <caret line="8" selection-start-line="8" selection-end-line="8" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/cljs/arduino/core.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="464">
          <caret line="16" selection-start-line="16" selection-end-line="16" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/cljs/arduino/views.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="364">
          <caret line="40" column="46" selection-start-line="40" selection-start-column="46" selection-end-line="40" selection-end-column="46" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/cljs/arduino/events.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="319">
          <caret line="11" selection-start-line="11" selection-end-line="11" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/cljs/arduino/db.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="203">
          <caret line="7" column="13" selection-start-line="7" selection-start-column="13" selection-end-line="7" selection-end-column="13" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/cljs/arduino/config.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="116">
          <caret line="4" selection-start-line="4" selection-end-line="4" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/arduino/influx.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1305">
          <caret line="45" column="20" selection-start-line="45" selection-start-column="20" selection-end-line="45" selection-end-column="20" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/README.md">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="232">
          <caret line="8" lean-forward="true" selection-start-line="8" selection-end-line="8" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-116">
          <caret line="32" column="71" selection-start-line="32" selection-start-column="71" selection-end-line="32" selection-end-column="71" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/arduino/scheduler.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1131">
          <caret line="63" column="44" lean-forward="true" selection-start-line="63" selection-start-column="44" selection-end-line="63" selection-end-column="44" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/arduino/web.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1769">
          <caret line="67" lean-forward="true" selection-start-line="67" selection-end-line="67" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/arduino/mqtt.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="406">
          <caret line="14" column="98" lean-forward="true" selection-start-line="14" selection-start-column="98" selection-end-line="14" selection-end-column="98" />
        </state>
      </provider>
    </entry>
  </component>
</project>